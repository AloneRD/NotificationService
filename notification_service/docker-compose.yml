version: "3.7"

services:
  db:
    image: postgres:14.3
    container_name: db
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    user: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  redis:
    image: 'redis:6.2'
    container_name: 'redis'
    restart: always
    volumes:
      - redis-data:/var/lib/redis
      - ./redis.conf:/usr/local/etc/redis/redis.conf

  backend:
    build: .
    container_name: 'backend'
    command: bash -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  
  celery:
    build: .
    container_name: celery
    command: celery -A notification_service worker --loglevel=info
    volumes:
      - ./project:/usr/src/app
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - CELERY_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      - redis

  dashboard:
    container_name: dashboard
    build: .
    command: celery -A notification_service flower --port=5555
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
      - backend
      - celery 
volumes:
  postgres-data:
  redis-data: